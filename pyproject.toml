# pyproject.toml

[build-system]
requires      = ["setuptools>=69.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gt-telem"
version = "1.2.0"
description = "Library to interface with Gran Turismo's motion rig telemetry service."
readme = "README.md"
authors = [{ name = "Jonpro03", email = "jonpro03@gmail.com" }]
license = { file = "LICENSE" }
classifiers = [
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Programming Language :: Python :: 3",
]
keywords = ["gran", "turismo"]
dependencies = [
    "pycryptodome >= 3.9.0"
]
requires-python = ">=3.10"

[project.optional-dependencies]
dev = ["black", "bumpver", "isort", "pandas", "pre-commit", "pytest", "pytest-cov", "python-semantic-release"]

[project.urls]
Homepage = "https://github.com/RaceCrewAI"

[tool.setuptools.package-data]
gt_telem = ["data/*.csv"]

[tool.bumpver]
current_version = "1.2.0"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "bump version {old_version} -> {new_version}"
tag_message = "{new_version}"
tag_scope = "default"
pre_commit_hook = ""
post_commit_hook = ""
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'current_version = "{version}"',
    'version = "{version}"',
]
"gt_telem/__init__.py" = [
    '__version__ = "{version}"'
]

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
version_variables = [
    "gt_telem/__init__.py:__version__",
]
branch = "main"
upload_to_pypi = false
upload_to_release = true
build_command = "pip install build && python -m build"
major_on_zero = true
tag_format = "v{version}"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["feat", "fix", "docs", "style", "refactor", "perf", "test", "build", "ci", "chore", "revert"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.branches.main]
match = "main"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []
